# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ready4assessment.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QKeySequence
from PyQt5.QtWidgets import *
from PyQt5.Qt import Qt
from test1_slow_input import Ui_slow_input_1
import global_var

class Ui_ready4assessment(QMainWindow):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        MainWindow.setStyleSheet("QWidget {\n"
"    background-image: url(:/login_background.png);\n"
"}")
        MainWindow.setDocumentMode(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setAutoFillBackground(False)
        self.centralwidget.setObjectName("centralwidget")
        self.btn_assessment = QtWidgets.QPushButton(self.centralwidget)
        self.btn_assessment.setGeometry(QtCore.QRect(300, 360, 200, 61))
        self.btn_assessment.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(208, 208, 208);\n"
"font: 75 12pt \"Arial\";")
        self.btn_assessment.setObjectName("btn_assessment")
        self.btn_assessment_2 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_assessment_2.setGeometry(QtCore.QRect(300, 440, 200, 61))
        self.btn_assessment_2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                          "background-color: rgb(208, 208, 208);\n"
                                          "font: 75 12pt \"Arial\";")
        self.btn_assessment_2.setObjectName("btn_assessment_2")
        self.btn_myo = QtWidgets.QPushButton(self.centralwidget)
        self.btn_myo.setGeometry(QtCore.QRect(600, 50, 141, 41))
        self.btn_myo.setAutoFillBackground(False)
        self.btn_myo.setStyleSheet("background-color: rgb(0, 170, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_myo.setObjectName("btn_myo")
        self.btn_camera = QtWidgets.QPushButton(self.centralwidget)
        self.btn_camera.setGeometry(QtCore.QRect(600, 100, 141, 41))
        self.btn_camera.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.btn_camera.setAutoFillBackground(False)
        self.btn_camera.setStyleSheet("background-color: rgb(0, 170, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_camera.setObjectName("btn_camera")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(200, 290, 400, 31))
        self.label.setStyleSheet("color: rgb(255, 255, 255);\n"
                                          "font: 75 14pt \"Arial\";")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")

        self.btn_myo.raise_()
        self.btn_camera.raise_()
        self.btn_assessment.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 709, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        #joint_dir=0
        #global_var.set_value('joint_dir', joint_dir)
        self.btn_assessment.clicked.connect(lambda:global_var.set_value('joint_dir', 0))
        self.btn_assessment.clicked.connect(self.slow_input_1)
        self.btn_assessment.clicked.connect(MainWindow.close)

        self.btn_assessment_2.clicked.connect(lambda:global_var.set_value('joint_dir', 1))
        self.btn_assessment_2.clicked.connect(self.slow_input_1)
        self.btn_assessment_2.clicked.connect(MainWindow.close)

    def keyPressEvent(self,event):
         if event.key() ==Qt.Key_Enter:
             print("pressed")
             QMainWindow.keyPressEvent(self, event)
             self.slow_input_1()

    # def keyPressEvent(self, event):
    #     if event.key() == Qt.Key_Space:
    #         self.test_method()
    #         self.slow_input_1()
    #
    # def test_method(self):
    #     print('Space key pressed')

        #self.shortcut = QShortcut(QKeySequence('Ctrl+M'),self)
        #self.shortcut.activated.connect(self.slow_input_1)

    def slow_input_1(self):
        self.assessmentWindow_1 = QMainWindow()
        self.ui = Ui_slow_input_1()
        self.ui.setupUi(self.assessmentWindow_1)
        self.assessmentWindow_1.show()
        #print("pressed")


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.btn_assessment.setText(_translate("MainWindow", "Left Joint"))
        self.btn_assessment_2.setText(_translate("MainWindow", "Right Joint"))
        self.btn_myo.setText(_translate("MainWindow", "MYO Connected"))
        self.btn_camera.setText(_translate("MainWindow", "Camera feeded"))
        self.label.setText(_translate("MainWindow", "Choose One Joint to Start Assessment"))
import images_resources_rc

if __name__ == '__main__':
    app = QApplication(sys.argv)
    myMainWindow = QMainWindow()
    demo = Ui_ready4assessment()
    demo.setupUi(myMainWindow)
    myMainWindow.show()
    
    sys.exit(app.exec_())
